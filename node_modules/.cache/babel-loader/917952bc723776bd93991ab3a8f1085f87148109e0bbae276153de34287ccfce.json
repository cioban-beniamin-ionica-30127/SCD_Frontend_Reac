{"ast":null,"code":"const extractRoleFromToken = token => {\n  try {\n    // Split the token into header, payload, and signature\n    const [encodedHeader, encodedPayload] = token.split('.');\n\n    // Decode the payload (Base64 decoding)\n    const decodedPayload = atob(encodedPayload);\n\n    // Parse the JSON payload to get the token claims\n    const claims = JSON.parse(decodedPayload);\n\n    // Extract the role from the claims\n    const role = claims.role || 'user'; // Default to 'user' if 'role' is not present\n\n    return role;\n  } catch (error) {\n    console.error('Error decoding and extracting role from JWT:', error);\n    return 'user'; // Default to 'user' in case of an error\n  }\n};\nmodule.exports = extractRoleFromToken;","map":{"version":3,"names":["extractRoleFromToken","token","encodedHeader","encodedPayload","split","decodedPayload","atob","claims","JSON","parse","role","error","console","module","exports"],"sources":["/mnt/nvme0n1p2/SCD/untitled/src/services/JwtDecoder.js"],"sourcesContent":["\r\n\r\nconst extractRoleFromToken = (token) => {\r\n    try {\r\n      // Split the token into header, payload, and signature\r\n      const [encodedHeader, encodedPayload] = token.split('.');\r\n  \r\n      // Decode the payload (Base64 decoding)\r\n      const decodedPayload = atob(encodedPayload);\r\n  \r\n      // Parse the JSON payload to get the token claims\r\n      const claims = JSON.parse(decodedPayload);\r\n  \r\n      // Extract the role from the claims\r\n      const role = claims.role || 'user'; // Default to 'user' if 'role' is not present\r\n  \r\n      return role;\r\n    } catch (error) {\r\n      console.error('Error decoding and extracting role from JWT:', error);\r\n      return 'user'; // Default to 'user' in case of an error\r\n    }\r\n  };\r\nmodule.exports = extractRoleFromToken;"],"mappings":"AAEA,MAAMA,oBAAoB,GAAIC,KAAK,IAAK;EACpC,IAAI;IACF;IACA,MAAM,CAACC,aAAa,EAAEC,cAAc,CAAC,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;;IAExD;IACA,MAAMC,cAAc,GAAGC,IAAI,CAACH,cAAc,CAAC;;IAE3C;IACA,MAAMI,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC;;IAEzC;IACA,MAAMK,IAAI,GAAGH,MAAM,CAACG,IAAI,IAAI,MAAM,CAAC,CAAC;;IAEpC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,OAAO,MAAM,CAAC,CAAC;EACjB;AACF,CAAC;AACHE,MAAM,CAACC,OAAO,GAAGd,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/mnt/nvme0n1p2/SCD/untitled/src/components/EmployeeManagementPage.js\",\n  _s = $RefreshSig$();\n// components/EmployeeManagementPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Select, MenuItem, FormControl, InputLabel, Box, Typography, Table, TableContainer, TableHead, TableBody, TableRow, TableCell, Paper, Checkbox, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeManagementPage = () => {\n  _s();\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [employees, setEmployees] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [selectedManagers, setSelectedManagers] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [emailSubject, setEmailSubject] = useState('');\n  const [emailContent, setEmailContent] = useState('');\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  // Fetch departments on component mount\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/v1/department/all', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n          }\n        });\n        setDepartments(response.data || []);\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n      }\n    };\n    fetchDepartments();\n  }, []);\n\n  // Fetch employees and managers when the selected department changes\n  useEffect(() => {\n    const fetchEmployeesAndManagers = async () => {\n      if (selectedDepartment) {\n        try {\n          const responseEmployees = await axios.get(`http://localhost:8080/api/v1/employee/byDepartament/employees/${selectedDepartment.name}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n            }\n          });\n          setEmployees(responseEmployees.data || []);\n          const responseManagers = await axios.get(`http://localhost:8080/api/v1/employee/byDepartament/managers/${selectedDepartment.name}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n            }\n          });\n          setManagers(responseManagers.data || []);\n        } catch (error) {\n          console.error('Error fetching employees and managers:', error);\n        }\n      }\n    };\n    fetchEmployeesAndManagers();\n  }, [selectedDepartment]);\n  const handleCheckboxChange = (type, employee) => {\n    if (type === 'employee') {\n      setSelectedEmployees(prev => prev.includes(employee.id) ? prev.filter(id => id !== employee.id) : [...prev, employee.id]);\n    } else {\n      setSelectedManagers(prev => prev.includes(employee.id) ? prev.filter(id => id !== employee.id) : [...prev, employee.id]);\n    }\n  };\n  const handleSendEmail = () => {\n    setOpenDialog(true);\n  };\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n  const handleConfirmSendEmail = async () => {\n    try {\n      if (selectedEmployees.length === 0 && selectedManagers.length === 0) {\n        setSnackbarMessage('Please select at least one employee or manager.');\n        setOpenSnackbar(true);\n        return;\n      }\n      if (!emailSubject || !emailContent) {\n        setSnackbarMessage('Subject and content cannot be empty.');\n        setOpenSnackbar(true);\n        return;\n      }\n\n      // Send email to selected employees\n      await axios.post('http://localhost:8080/api/v1/email', {\n        subject: emailSubject,\n        message: emailContent,\n        recipientDetailsList: [...selectedEmployees, ...selectedManagers].map(id => {\n          const employee = [...employees, ...managers].find(emp => emp.id === id);\n          return {\n            name: employee ? employee.name : 'Unknown Employee/Manager',\n            email: employee ? employee.email : ''\n          };\n        })\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      });\n\n      // Clear selected employees and close the dialog after sending email\n      setSelectedEmployees([]);\n      setSelectedManagers([]);\n      setEmailSubject('');\n      setEmailContent('');\n      setOpenDialog(false);\n      setSnackbarMessage('Email sent successfully.');\n      setOpenSnackbar(true);\n    } catch (error) {\n      console.error('Error sending email:', error);\n      setSnackbarMessage('Sending email failed.');\n      setOpenSnackbar(true);\n    }\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      style: {\n        width: 100,\n        margin: '30px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"department-select\",\n        children: \"Select Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        label: \"Select Department\",\n        value: selectedDepartment ? selectedDepartment.name : '',\n        onChange: e => {\n          const selected = departments.find(dept => dept.name === e.target.value);\n          setSelectedDepartment(selected);\n        },\n        inputProps: {\n          name: 'department',\n          id: 'department-select'\n        },\n        children: departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: dept.name,\n          children: dept.name\n        }, dept.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), selectedDepartment && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      width: \"80%\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Employees and Managers in \", selectedDepartment.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [...employees, ...managers].map(employee => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.manager ? employee.manager.name : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: employee.manager && selectedManagers.includes(employee.id) || !employee.manager && selectedEmployees.includes(employee.id),\n                  onChange: () => handleCheckboxChange(employee.manager ? 'manager' : 'employee', employee)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendEmail,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Selected Employees/Managers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [...selectedEmployees, ...selectedManagers].map(id => {\n            const employee = [...employees, ...managers].find(emp => emp.id === id);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: employee ? employee.name : 'Unknown Employee/Manager'\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Subject\",\n          variant: \"outlined\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: emailSubject,\n          onChange: e => setEmailSubject(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Content\",\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          margin: \"normal\",\n          value: emailContent,\n          onChange: e => setEmailContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmSendEmail,\n          color: \"primary\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      message: snackbarMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeManagementPage, \"I5Nx/9UicVxejLsyaA43C23/DiE=\");\n_c = EmployeeManagementPage;\nexport default EmployeeManagementPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","MenuItem","FormControl","InputLabel","Box","Typography","Table","TableContainer","TableHead","TableBody","TableRow","TableCell","Paper","Checkbox","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Snackbar","jsxDEV","_jsxDEV","EmployeeManagementPage","_s","departments","setDepartments","selectedDepartment","setSelectedDepartment","employees","setEmployees","managers","setManagers","selectedEmployees","setSelectedEmployees","selectedManagers","setSelectedManagers","openDialog","setOpenDialog","emailSubject","setEmailSubject","emailContent","setEmailContent","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","fetchDepartments","response","get","headers","Authorization","localStorage","getItem","data","error","console","fetchEmployeesAndManagers","responseEmployees","name","responseManagers","handleCheckboxChange","type","employee","prev","includes","id","filter","handleSendEmail","handleDialogClose","handleConfirmSendEmail","length","post","subject","message","recipientDetailsList","map","find","emp","email","handleSnackbarClose","event","reason","display","flexDirection","alignItems","children","fullWidth","style","width","margin","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","selected","dept","target","inputProps","mt","variant","component","manager","checked","color","onClick","open","onClose","multiline","rows","autoHideDuration","_c","$RefreshReg$"],"sources":["/mnt/nvme0n1p2/SCD/untitled/src/components/EmployeeManagementPage.js"],"sourcesContent":["// components/EmployeeManagementPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Checkbox,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Snackbar,\r\n} from '@mui/material';\r\n\r\nconst EmployeeManagementPage = () => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [managers, setManagers] = useState([]);\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const [selectedManagers, setSelectedManagers] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [emailSubject, setEmailSubject] = useState('');\r\n  const [emailContent, setEmailContent] = useState('');\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n  // Fetch departments on component mount\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/api/v1/department/all', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n        });\r\n        setDepartments(response.data || []);\r\n      } catch (error) {\r\n        console.error('Error fetching departments:', error);\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  // Fetch employees and managers when the selected department changes\r\n  useEffect(() => {\r\n    const fetchEmployeesAndManagers = async () => {\r\n      if (selectedDepartment) {\r\n        try {\r\n          const responseEmployees = await axios.get(\r\n            `http://localhost:8080/api/v1/employee/byDepartament/employees/${selectedDepartment.name}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n              },\r\n            }\r\n          );\r\n          setEmployees(responseEmployees.data || []);\r\n\r\n          const responseManagers = await axios.get(\r\n            `http://localhost:8080/api/v1/employee/byDepartament/managers/${selectedDepartment.name}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n              },\r\n            }\r\n          );\r\n          setManagers(responseManagers.data || []);\r\n        } catch (error) {\r\n          console.error('Error fetching employees and managers:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchEmployeesAndManagers();\r\n  }, [selectedDepartment]);\r\n\r\n  const handleCheckboxChange = (type, employee) => {\r\n    if (type === 'employee') {\r\n      setSelectedEmployees((prev) =>\r\n        prev.includes(employee.id)\r\n          ? prev.filter((id) => id !== employee.id)\r\n          : [...prev, employee.id]\r\n      );\r\n    } else {\r\n      setSelectedManagers((prev) =>\r\n        prev.includes(employee.id)\r\n          ? prev.filter((id) => id !== employee.id)\r\n          : [...prev, employee.id]\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSendEmail = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleConfirmSendEmail = async () => {\r\n    try {\r\n      if (selectedEmployees.length === 0 && selectedManagers.length === 0) {\r\n        setSnackbarMessage('Please select at least one employee or manager.');\r\n        setOpenSnackbar(true);\r\n        return;\r\n      }\r\n\r\n      if (!emailSubject || !emailContent) {\r\n        setSnackbarMessage('Subject and content cannot be empty.');\r\n        setOpenSnackbar(true);\r\n        return;\r\n      }\r\n\r\n      // Send email to selected employees\r\n      await axios.post(\r\n        'http://localhost:8080/api/v1/email',\r\n        {\r\n          subject: emailSubject,\r\n          message: emailContent,\r\n          recipientDetailsList: [...selectedEmployees, ...selectedManagers].map((id) => {\r\n            const employee = [...employees, ...managers].find(\r\n              (emp) => emp.id === id\r\n            );\r\n            return {\r\n              name: employee ? employee.name : 'Unknown Employee/Manager',\r\n              email: employee ? employee.email : '',\r\n            };\r\n          }),\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Clear selected employees and close the dialog after sending email\r\n      setSelectedEmployees([]);\r\n      setSelectedManagers([]);\r\n      setEmailSubject('');\r\n      setEmailContent('');\r\n      setOpenDialog(false);\r\n\r\n      setSnackbarMessage('Email sent successfully.');\r\n      setOpenSnackbar(true);\r\n    } catch (error) {\r\n      console.error('Error sending email:', error);\r\n      setSnackbarMessage('Sending email failed.');\r\n      setOpenSnackbar(true);\r\n    }\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <FormControl fullWidth style={{ width: 100, margin: '30px 0' }}>\r\n        <InputLabel htmlFor=\"department-select\">Select Department</InputLabel>\r\n        <Select\r\n          label=\"Select Department\"\r\n          value={selectedDepartment ? selectedDepartment.name : ''}\r\n          onChange={(e) => {\r\n            const selected = departments.find(\r\n              (dept) => dept.name === e.target.value\r\n            );\r\n            setSelectedDepartment(selected);\r\n          }}\r\n          inputProps={{ name: 'department', id: 'department-select' }}\r\n        >\r\n          {departments.map((dept) => (\r\n            <MenuItem key={dept.id} value={dept.name}>\r\n              {dept.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {selectedDepartment && (\r\n        <Box mt={2} width=\"80%\">\r\n          <Typography variant=\"h5\">Employees and Managers in {selectedDepartment.name}</Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Manager</TableCell>\r\n                  <TableCell>Select</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {[...employees, ...managers].map((employee) => (\r\n                  <TableRow key={employee.id}>\r\n                    <TableCell>{employee.name}</TableCell>\r\n                    <TableCell>{employee.email}</TableCell>\r\n                    <TableCell>{employee.manager ? employee.manager.name : 'N/A'}</TableCell>\r\n                    <TableCell>\r\n                      <Checkbox\r\n                        checked={\r\n                          (employee.manager && selectedManagers.includes(employee.id)) ||\r\n                          (!employee.manager && selectedEmployees.includes(employee.id))\r\n                        }\r\n                        onChange={() =>\r\n                          handleCheckboxChange(\r\n                            employee.manager ? 'manager' : 'employee',\r\n                            employee\r\n                          )\r\n                        }\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSendEmail}>\r\n            Send Email\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      <Dialog open={openDialog} onClose={handleDialogClose}>\r\n        <DialogTitle>Send Email</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"subtitle1\">Selected Employees/Managers:</Typography>\r\n          <ul>\r\n            {[...selectedEmployees, ...selectedManagers].map((id) => {\r\n              const employee = [...employees, ...managers].find(\r\n                (emp) => emp.id === id\r\n              );\r\n              return (\r\n                <li key={id}>\r\n                  {employee ? employee.name : 'Unknown Employee/Manager'}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <TextField\r\n            label=\"Subject\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={emailSubject}\r\n            onChange={(e) => setEmailSubject(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Content\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            margin=\"normal\"\r\n            value={emailContent}\r\n            onChange={(e) => setEmailContent(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmSendEmail} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        message={snackbarMessage}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmployeeManagementPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,MAAM,EACNC,QAAQ,EACRC,WAAW,EACXC,UAAU,EACVC,GAAG,EACHC,UAAU,EACVC,KAAK,EACLC,cAAc,EACdC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,KAAK,EACLC,QAAQ,EACRC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,SAAS,EACTC,QAAQ,QACH,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACsC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4C,YAAY,EAAEC,eAAe,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC8C,YAAY,EAAEC,eAAe,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgD,eAAe,EAAEC,kBAAkB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMiD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,GAAG,CAAC,6CAA6C,EAAE;UAC9EC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;UACvD;QACF,CAAC,CAAC;QACF3B,cAAc,CAACsB,QAAQ,CAACM,IAAI,IAAI,EAAE,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjD,SAAS,CAAC,MAAM;IACd,MAAM2D,yBAAyB,GAAG,MAAAA,CAAA,KAAY;MAC5C,IAAI9B,kBAAkB,EAAE;QACtB,IAAI;UACF,MAAM+B,iBAAiB,GAAG,MAAM3D,KAAK,CAACkD,GAAG,CACtC,iEAAgEtB,kBAAkB,CAACgC,IAAK,EAAC,EAC1F;YACET,OAAO,EAAE;cACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;YACvD;UACF,CACF,CAAC;UACDvB,YAAY,CAAC4B,iBAAiB,CAACJ,IAAI,IAAI,EAAE,CAAC;UAE1C,MAAMM,gBAAgB,GAAG,MAAM7D,KAAK,CAACkD,GAAG,CACrC,gEAA+DtB,kBAAkB,CAACgC,IAAK,EAAC,EACzF;YACET,OAAO,EAAE;cACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;YACvD;UACF,CACF,CAAC;UACDrB,WAAW,CAAC4B,gBAAgB,CAACN,IAAI,IAAI,EAAE,CAAC;QAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAChE;MACF;IACF,CAAC;IAEDE,yBAAyB,CAAC,CAAC;EAC7B,CAAC,EAAE,CAAC9B,kBAAkB,CAAC,CAAC;EAExB,MAAMkC,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAC/C,IAAID,IAAI,KAAK,UAAU,EAAE;MACvB5B,oBAAoB,CAAE8B,IAAI,IACxBA,IAAI,CAACC,QAAQ,CAACF,QAAQ,CAACG,EAAE,CAAC,GACtBF,IAAI,CAACG,MAAM,CAAED,EAAE,IAAKA,EAAE,KAAKH,QAAQ,CAACG,EAAE,CAAC,GACvC,CAAC,GAAGF,IAAI,EAAED,QAAQ,CAACG,EAAE,CAC3B,CAAC;IACH,CAAC,MAAM;MACL9B,mBAAmB,CAAE4B,IAAI,IACvBA,IAAI,CAACC,QAAQ,CAACF,QAAQ,CAACG,EAAE,CAAC,GACtBF,IAAI,CAACG,MAAM,CAAED,EAAE,IAAKA,EAAE,KAAKH,QAAQ,CAACG,EAAE,CAAC,GACvC,CAAC,GAAGF,IAAI,EAAED,QAAQ,CAACG,EAAE,CAC3B,CAAC;IACH;EACF,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B9B,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAM+B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B/B,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMgC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,IAAIrC,iBAAiB,CAACsC,MAAM,KAAK,CAAC,IAAIpC,gBAAgB,CAACoC,MAAM,KAAK,CAAC,EAAE;QACnEzB,kBAAkB,CAAC,iDAAiD,CAAC;QACrEF,eAAe,CAAC,IAAI,CAAC;QACrB;MACF;MAEA,IAAI,CAACL,YAAY,IAAI,CAACE,YAAY,EAAE;QAClCK,kBAAkB,CAAC,sCAAsC,CAAC;QAC1DF,eAAe,CAAC,IAAI,CAAC;QACrB;MACF;;MAEA;MACA,MAAM7C,KAAK,CAACyE,IAAI,CACd,oCAAoC,EACpC;QACEC,OAAO,EAAElC,YAAY;QACrBmC,OAAO,EAAEjC,YAAY;QACrBkC,oBAAoB,EAAE,CAAC,GAAG1C,iBAAiB,EAAE,GAAGE,gBAAgB,CAAC,CAACyC,GAAG,CAAEV,EAAE,IAAK;UAC5E,MAAMH,QAAQ,GAAG,CAAC,GAAGlC,SAAS,EAAE,GAAGE,QAAQ,CAAC,CAAC8C,IAAI,CAC9CC,GAAG,IAAKA,GAAG,CAACZ,EAAE,KAAKA,EACtB,CAAC;UACD,OAAO;YACLP,IAAI,EAAEI,QAAQ,GAAGA,QAAQ,CAACJ,IAAI,GAAG,0BAA0B;YAC3DoB,KAAK,EAAEhB,QAAQ,GAAGA,QAAQ,CAACgB,KAAK,GAAG;UACrC,CAAC;QACH,CAAC;MACH,CAAC,EACD;QACE7B,OAAO,EAAE;UACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;QACvD;MACF,CACF,CAAC;;MAED;MACAnB,oBAAoB,CAAC,EAAE,CAAC;MACxBE,mBAAmB,CAAC,EAAE,CAAC;MACvBI,eAAe,CAAC,EAAE,CAAC;MACnBE,eAAe,CAAC,EAAE,CAAC;MACnBJ,aAAa,CAAC,KAAK,CAAC;MAEpBQ,kBAAkB,CAAC,0BAA0B,CAAC;MAC9CF,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CT,kBAAkB,CAAC,uBAAuB,CAAC;MAC3CF,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAMoC,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC7C,IAAIA,MAAM,KAAK,WAAW,EAAE;MAC1B;IACF;IAEAtC,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEtB,OAAA,CAAClB,GAAG;IAAC+E,OAAO,EAAC,MAAM;IAACC,aAAa,EAAC,QAAQ;IAACC,UAAU,EAAC,QAAQ;IAAAC,QAAA,gBAC5DhE,OAAA,CAACpB,WAAW;MAACqF,SAAS;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAJ,QAAA,gBAC7DhE,OAAA,CAACnB,UAAU;QAACwF,OAAO,EAAC,mBAAmB;QAAAL,QAAA,EAAC;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACtEzE,OAAA,CAACtB,MAAM;QACLgG,KAAK,EAAC,mBAAmB;QACzBC,KAAK,EAAEtE,kBAAkB,GAAGA,kBAAkB,CAACgC,IAAI,GAAG,EAAG;QACzDuC,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMC,QAAQ,GAAG3E,WAAW,CAACoD,IAAI,CAC9BwB,IAAI,IAAKA,IAAI,CAAC1C,IAAI,KAAKwC,CAAC,CAACG,MAAM,CAACL,KACnC,CAAC;UACDrE,qBAAqB,CAACwE,QAAQ,CAAC;QACjC,CAAE;QACFG,UAAU,EAAE;UAAE5C,IAAI,EAAE,YAAY;UAAEO,EAAE,EAAE;QAAoB,CAAE;QAAAoB,QAAA,EAE3D7D,WAAW,CAACmD,GAAG,CAAEyB,IAAI,iBACpB/E,OAAA,CAACrB,QAAQ;UAAegG,KAAK,EAAEI,IAAI,CAAC1C,IAAK;UAAA2B,QAAA,EACtCe,IAAI,CAAC1C;QAAI,GADG0C,IAAI,CAACnC,EAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAEbpE,kBAAkB,iBACjBL,OAAA,CAAClB,GAAG;MAACoG,EAAE,EAAE,CAAE;MAACf,KAAK,EAAC,KAAK;MAAAH,QAAA,gBACrBhE,OAAA,CAACjB,UAAU;QAACoG,OAAO,EAAC,IAAI;QAAAnB,QAAA,GAAC,4BAA0B,EAAC3D,kBAAkB,CAACgC,IAAI;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACzFzE,OAAA,CAACf,cAAc;QAACmG,SAAS,EAAE9F,KAAM;QAAA0E,QAAA,eAC/BhE,OAAA,CAAChB,KAAK;UAAAgF,QAAA,gBACJhE,OAAA,CAACd,SAAS;YAAA8E,QAAA,eACRhE,OAAA,CAACZ,QAAQ;cAAA4E,QAAA,gBACPhE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,EAAC;cAAI;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC3BzE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,EAAC;cAAK;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC5BzE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,EAAC;cAAO;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC9BzE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,EAAC;cAAM;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZzE,OAAA,CAACb,SAAS;YAAA6E,QAAA,EACP,CAAC,GAAGzD,SAAS,EAAE,GAAGE,QAAQ,CAAC,CAAC6C,GAAG,CAAEb,QAAQ,iBACxCzC,OAAA,CAACZ,QAAQ;cAAA4E,QAAA,gBACPhE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,EAAEvB,QAAQ,CAACJ;cAAI;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCzE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,EAAEvB,QAAQ,CAACgB;cAAK;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACvCzE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,EAAEvB,QAAQ,CAAC4C,OAAO,GAAG5C,QAAQ,CAAC4C,OAAO,CAAChD,IAAI,GAAG;cAAK;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACzEzE,OAAA,CAACX,SAAS;gBAAA2E,QAAA,eACRhE,OAAA,CAACT,QAAQ;kBACP+F,OAAO,EACJ7C,QAAQ,CAAC4C,OAAO,IAAIxE,gBAAgB,CAAC8B,QAAQ,CAACF,QAAQ,CAACG,EAAE,CAAC,IAC1D,CAACH,QAAQ,CAAC4C,OAAO,IAAI1E,iBAAiB,CAACgC,QAAQ,CAACF,QAAQ,CAACG,EAAE,CAC7D;kBACDgC,QAAQ,EAAEA,CAAA,KACRrC,oBAAoB,CAClBE,QAAQ,CAAC4C,OAAO,GAAG,SAAS,GAAG,UAAU,EACzC5C,QACF;gBACD;kBAAA6B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACO,CAAC;YAAA,GAjBChC,QAAQ,CAACG,EAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkBhB,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAEjBzE,OAAA,CAACR,MAAM;QAAC2F,OAAO,EAAC,WAAW;QAACI,KAAK,EAAC,SAAS;QAACC,OAAO,EAAE1C,eAAgB;QAAAkB,QAAA,EAAC;MAEtE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAEDzE,OAAA,CAACP,MAAM;MAACgG,IAAI,EAAE1E,UAAW;MAAC2E,OAAO,EAAE3C,iBAAkB;MAAAiB,QAAA,gBACnDhE,OAAA,CAACN,WAAW;QAAAsE,QAAA,EAAC;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACrCzE,OAAA,CAACL,aAAa;QAAAqE,QAAA,gBACZhE,OAAA,CAACjB,UAAU;UAACoG,OAAO,EAAC,WAAW;UAAAnB,QAAA,EAAC;QAA4B;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACzEzE,OAAA;UAAAgE,QAAA,EACG,CAAC,GAAGrD,iBAAiB,EAAE,GAAGE,gBAAgB,CAAC,CAACyC,GAAG,CAAEV,EAAE,IAAK;YACvD,MAAMH,QAAQ,GAAG,CAAC,GAAGlC,SAAS,EAAE,GAAGE,QAAQ,CAAC,CAAC8C,IAAI,CAC9CC,GAAG,IAAKA,GAAG,CAACZ,EAAE,KAAKA,EACtB,CAAC;YACD,oBACE5C,OAAA;cAAAgE,QAAA,EACGvB,QAAQ,GAAGA,QAAQ,CAACJ,IAAI,GAAG;YAA0B,GAD/CO,EAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEP,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACLzE,OAAA,CAACH,SAAS;UACR6E,KAAK,EAAC,SAAS;UACfS,OAAO,EAAC,UAAU;UAClBlB,SAAS;UACTG,MAAM,EAAC,QAAQ;UACfO,KAAK,EAAE1D,YAAa;UACpB2D,QAAQ,EAAGC,CAAC,IAAK3D,eAAe,CAAC2D,CAAC,CAACG,MAAM,CAACL,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACFzE,OAAA,CAACH,SAAS;UACR6E,KAAK,EAAC,SAAS;UACfS,OAAO,EAAC,UAAU;UAClBlB,SAAS;UACT0B,SAAS;UACTC,IAAI,EAAE,CAAE;UACRxB,MAAM,EAAC,QAAQ;UACfO,KAAK,EAAExD,YAAa;UACpByD,QAAQ,EAAGC,CAAC,IAAKzD,eAAe,CAACyD,CAAC,CAACG,MAAM,CAACL,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,eAChBzE,OAAA,CAACJ,aAAa;QAAAoE,QAAA,gBACZhE,OAAA,CAACR,MAAM;UAACgG,OAAO,EAAEzC,iBAAkB;UAACwC,KAAK,EAAC,WAAW;UAAAvB,QAAA,EAAC;QAEtD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzE,OAAA,CAACR,MAAM;UAACgG,OAAO,EAAExC,sBAAuB;UAACuC,KAAK,EAAC,SAAS;UAAAvB,QAAA,EAAC;QAEzD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAETzE,OAAA,CAACF,QAAQ;MACP2F,IAAI,EAAEpE,YAAa;MACnBwE,gBAAgB,EAAE,IAAK;MACvBH,OAAO,EAAEhC,mBAAoB;MAC7BN,OAAO,EAAE7B;IAAgB;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvE,EAAA,CA9QID,sBAAsB;AAAA6F,EAAA,GAAtB7F,sBAAsB;AAgR5B,eAAeA,sBAAsB;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}